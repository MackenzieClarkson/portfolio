{"remainingRequest":"/home/mac/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mac/portfolio/src/components/widgets/chart/BoxChart.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/mac/portfolio/src/components/widgets/chart/BoxChart.vue","mtime":1708112739133},{"path":"/home/mac/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1708113037467},{"path":"/home/mac/portfolio/node_modules/babel-loader/lib/index.js","mtime":1708113030356},{"path":"/home/mac/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1708113037467},{"path":"/home/mac/portfolio/node_modules/vue-loader/lib/index.js","mtime":1708113038191}],"contextDependencies":[],"result":["\nimport EChart from '@/components/chart/echart';\nimport Material from 'vuetify/es5/util/colors';\n\nexport default {\n  components: {\n    EChart\n  },\n  props: {\n    title: String,\n    gradient: {\n      type: Boolean,\n      default: false,\n    },\n    subTitle: String,\n    icon: String,\n    cardColor: {\n      type: String,\n      default: 'white'\n    },\n    iconColor: {\n      type: String,\n      default: 'success',\n    },\n    type: String,\n    chartColor: Array,\n    data: Array,\n  },\n  data () {\n    return {\n      defaultOption: [\n        ['dataset.source', this.data],\n        ['xAxis.show', false],\n        ['yAxis.show', false],\n        ['grid.top', '15%'],\n        ['grid.left', '0'],\n        ['grid.bottom', '0'],\n        ['grid.right', '0'],        \n        ['color', this.chartColor],\n      ]\n    };\n  },\n\n  computed: {\n    computeCardDark () {\n      return this.cardColor !== 'white';  \n    },\n    computeChartOption () {\n      switch (this.type) {\n        case 'bar':\n          this.defaultOption.push(['series[0].type', 'bar']);\n          this.defaultOption.push(['series[0].barWidth', '50%']);\n          // add shadow series\n          // this.defaultOption.push(['series[1].type', 'bar']);\n          break;\n        case 'stack-bar':\n          // set stacked bar\n          // this.defaultOption.push(['series[0].data', StackBarData]);\n          this.defaultOption.push(['series[0].type', 'bar']);\n          this.defaultOption.push(['series[0].itemStyle.normar.color', 'rgba(0,0,0,0.05)']);\n          this.defaultOption.push(['series[0].barGap', '-100%']);\n          // set main series\n          // this.defaultOption.push(['series[1].data', StackData]);\n          this.defaultOption.push(['series[1].type', 'bar']);\n          break;  \n        case 'area':\n          this.defaultOption.push(['series[0].type', 'line']);\n          this.defaultOption.push(['series[0].smooth', true]);\n          this.defaultOption.push(['xAxis.boundaryGap', false]);          \n          this.defaultOption.push(['series[0].areaStyle', {}]); \n          if (this.gradient) {\n            this.defaultOption.push(['series[0].areaStyle', {\n              normal: {\n                color: new window.echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: this.chartColor[0],\n                  }, \n                  {\n                    offset: 1,\n                    color: this.chartColor[1],\n                  }\n                ])\n              }            \n            }]);\n          }\n\n          break;\n        default:\n          // line\n          this.defaultOption.push(['series[0].smooth', true]);\n          this.defaultOption.push(['xAxis.boundaryGap', false]);\n          break;\n      }\n      return this.defaultOption;\n    }\n  }\n\n};\n",{"version":3,"sources":["BoxChart.vue"],"names":[],"mappings":";AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"BoxChart.vue","sourceRoot":"src/components/widgets/chart","sourcesContent":["<template>\n  <v-card :color=\"cardColor\" :dark=\"computeCardDark\">\n    <v-card-title>\n      <div class=\"layout row ma-0\">\n        <div class=\"subheading\">{{title}}</div>\n        <v-spacer></v-spacer>\n        <div class=\"caption\"> <v-icon>trending_up</v-icon>  {{subTitle}}</div>\n      </div>\n    </v-card-title>\n    <v-responsive class=\"white--text\">\n      <e-chart \n      :path-option=\"computeChartOption\"\n      height=\"308px\"\n      width=\"100%\"\n      >\n      </e-chart>\n    </v-responsive>    \n  </v-card>    \n</template>\n\n<script>\nimport EChart from '@/components/chart/echart';\nimport Material from 'vuetify/es5/util/colors';\n\nexport default {\n  components: {\n    EChart\n  },\n  props: {\n    title: String,\n    gradient: {\n      type: Boolean,\n      default: false,\n    },\n    subTitle: String,\n    icon: String,\n    cardColor: {\n      type: String,\n      default: 'white'\n    },\n    iconColor: {\n      type: String,\n      default: 'success',\n    },\n    type: String,\n    chartColor: Array,\n    data: Array,\n  },\n  data () {\n    return {\n      defaultOption: [\n        ['dataset.source', this.data],\n        ['xAxis.show', false],\n        ['yAxis.show', false],\n        ['grid.top', '15%'],\n        ['grid.left', '0'],\n        ['grid.bottom', '0'],\n        ['grid.right', '0'],        \n        ['color', this.chartColor],\n      ]\n    };\n  },\n\n  computed: {\n    computeCardDark () {\n      return this.cardColor !== 'white';  \n    },\n    computeChartOption () {\n      switch (this.type) {\n        case 'bar':\n          this.defaultOption.push(['series[0].type', 'bar']);\n          this.defaultOption.push(['series[0].barWidth', '50%']);\n          // add shadow series\n          // this.defaultOption.push(['series[1].type', 'bar']);\n          break;\n        case 'stack-bar':\n          // set stacked bar\n          // this.defaultOption.push(['series[0].data', StackBarData]);\n          this.defaultOption.push(['series[0].type', 'bar']);\n          this.defaultOption.push(['series[0].itemStyle.normar.color', 'rgba(0,0,0,0.05)']);\n          this.defaultOption.push(['series[0].barGap', '-100%']);\n          // set main series\n          // this.defaultOption.push(['series[1].data', StackData]);\n          this.defaultOption.push(['series[1].type', 'bar']);\n          break;  \n        case 'area':\n          this.defaultOption.push(['series[0].type', 'line']);\n          this.defaultOption.push(['series[0].smooth', true]);\n          this.defaultOption.push(['xAxis.boundaryGap', false]);          \n          this.defaultOption.push(['series[0].areaStyle', {}]); \n          if (this.gradient) {\n            this.defaultOption.push(['series[0].areaStyle', {\n              normal: {\n                color: new window.echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: this.chartColor[0],\n                  }, \n                  {\n                    offset: 1,\n                    color: this.chartColor[1],\n                  }\n                ])\n              }            \n            }]);\n          }\n\n          break;\n        default:\n          // line\n          this.defaultOption.push(['series[0].smooth', true]);\n          this.defaultOption.push(['xAxis.boundaryGap', false]);\n          break;\n      }\n      return this.defaultOption;\n    }\n  }\n\n};\n</script>\n\n<style>\n\n</style>\n"]}]}